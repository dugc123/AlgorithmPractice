/*
 * 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
    每次你可以爬至多m (1 <= m < n)个台阶。你有多少种不同的方法可以爬到楼顶呢？
    注意：给定 n 是一个正整数。
    输入描述：输入共一行，包含两个正整数，分别表示n, m
    输出描述：输出一个整数，表示爬到楼顶的方法数。

    输入示例：3 2
    输出示例：3

    提示：
    当 m = 2，n = 3 时，n = 3 这表示一共有三个台阶，m = 2 代表你每次可以爬一个台阶或者两个台阶。
    此时你有三种方法可以爬到楼顶。

    1 阶 + 1 阶 + 1 阶段
    1 阶 + 2 阶
    2 阶 + 1 阶
 */
var climbStairs = function (n) {
    let dp = new Array(n + 1).fill(0);
    dp[0] = 1;
    // 背包在外物品在内
    for (let j = 1; j <= n; j++) {//遍历背包
        for (let i = 1; i <= 2; i++) {//遍历物品
            if (j - i >= 0) dp[j] = dp[j] + dp[j - i];
        }
    }
    return dp[n];
}